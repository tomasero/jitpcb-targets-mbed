# Modifies the environment to build mbed firmware for this target
Import('env')

SConscript('mbed-scons/SConscript-mbed', exports='env')

env.ConfigureMbedTarget('NUCLEO_F303K8', File('mbed/hal/targets.json').srcnode())

# Build the mbed library as a static library
mbed_paths = env.GetMbedSourceDirectories('mbed/hal')
env.Append(CPPPATH=[x.srcnode() for x in mbed_paths])  # this allows duplicate=0
env['MBED_LINKSCRIPT'] = env.GetMbedLinkscript(mbed_paths)

env_mbed = env.Clone()
env_mbed.Append(CCFLAGS = ['-w'])  # don't care about errors in dependencies
mbed_lib = env_mbed.StaticLibrary('mbed', env.GetMbedSources(mbed_paths))

env.Prepend(LIBS = mbed_lib)
env.Append(LINKFLAGS=[
  '-Wl,--whole-archive',  # used to compile mbed HAL, which uses funky weak symbols
  mbed_lib,
  '-Wl,--no-whole-archive',
  '--specs=nosys.specs',
])

env.Append(CPPPATH=Dir('targets/nucleo-f303k8-bl').srcnode())
